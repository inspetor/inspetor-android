apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply from: 'keystore.gradle'

ext {
    groupId = 'com.legiti'
    artifactId = "legiti"
    libVersion = "1.0.3"
}

version = libVersion
group = groupId

if (project.hasProperty("kotlin")) { //Kotlin libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set("sources")
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {

    }
} else if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set("sources")
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}


bintray {
    user = bintray_user
    key = bintray_key
    configurations = ['archives']
    publish = true
    override = true

    pkg {
        repo = "legiti-android"
        name = "legiti"
        version {
            name = libVersion
            desc = 'Legiti Antifraud Library for Android'
            released = new Date()
            vcsTag = libVersion
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            name 'Legiti'
            description 'Legiti Antifraud Library for Android'
            url 'https://github.com/legiti/legiti-android'
            inceptionYear '2020'
            packaging 'aar'
            groupId groupId
            artifactId artifactId
            version libVersion
            name artifactId

            licenses {
                license {
                    name 'The MIT License (MIT)'
                    url 'https://opensource.org/licenses/MIT'
                }
            }

            scm {
                connection 'https://github.com/legiti/legiti-android.git'
                url 'https://github.com/legiti/legiti-android'
            }

            developers {
                developer {
                    id = 'legiti'
                    name 'Legiti Dev Team'
                }
            }
        }

        pom.withXml {
            final dependenciesNode = asNode().appendNode('dependencies')

            ext.addDependency = { Dependency dep, String scope ->
                if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                    return // ignore invalid dependencies

                final dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', dep.group)
                dependencyNode.appendNode('artifactId', dep.name)
                dependencyNode.appendNode('version', dep.version)
                dependencyNode.appendNode('scope', scope)
            }

            // List all "compile" dependencies (for old Gradle)
            configurations.compile.getDependencies().all { dep -> addDependency(dep, "compile") }
            // List all "api" dependencies (for new Gradle) as "compile" dependencies
            configurations.api.getDependencies().all { dep -> addDependency(dep, "compile") }
            // List all "implementation" dependencies (for new Gradle) as "runtime" dependencies
            configurations.implementation.getDependencies().all { dep -> addDependency(dep, "runtime") }
        }
    }
}
